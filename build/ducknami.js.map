{"version":3,"sources":["index.js"],"names":["Ducknami","options","e","cache","keyCode","clearTimeout","_timer","setTimeout","_onSetupReset","delay","console","log","join","slice","code","length","debug","onReset","_checkValidCode","_clear","onSuccess","keys","every","val","i","JSON","stringify","defaults","_onDefaultReset","_onDefaultSuccess","window"],"mappings":";AAuEeA,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,KAAAA,GAAAA,GAAAA,OAAAA,sBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,sBAAAA,GAAAA,IAAAA,EAAAA,EAAAA,OAAAA,SAAAA,GAAAA,OAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,cAAAA,EAAAA,KAAAA,MAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,MAAAA,UAAAA,GAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,GAAAA,QAAAA,SAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,OAAAA,0BAAAA,OAAAA,iBAAAA,EAAAA,OAAAA,0BAAAA,IAAAA,EAAAA,OAAAA,IAAAA,QAAAA,SAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,MAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,wIAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,OAAAA,YAAAA,OAAAA,GAAAA,OAAAA,MAAAA,KAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAvETA,IAAAA,EACJ,SAA0B,IAAA,IAAA,EAAA,KAAdC,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GAalB,EAAA,KAAA,QAAA,SAACC,GACP,EAAKC,MAAY,GAAA,OAAA,EAAA,EAAKA,OAAOD,CAAAA,EAAEE,UAE/BC,aAAa,EAAKC,QAClB,EAAKA,OAASC,WAAW,EAAKC,cAAe,EAAKP,QAAQQ,OAE1DC,QAAQC,IAAI,qBAAsB,EAAKR,MAAMS,KAAK,QAG9C,EAAA,KAAA,MAAA,SAACV,GACL,EAAKC,MAAQ,GAAI,OAAA,EAAA,EAAKA,OAAOD,CAAAA,EAAEE,UAASS,OAAkC,EAA5B,EAAKZ,QAAQa,KAAKC,QAC5D,EAAKd,QAAQe,OACfN,QAAQC,IAAI,qBAAsB,EAAKR,MAAMS,KAAK,MAGpDP,aAAa,EAAKC,QAClB,EAAKA,OAASC,WAAW,EAAKU,QAAS,EAAKhB,QAAQQ,OAEhD,EAAKS,gBAAgB,EAAKf,SACxB,EAAKF,QAAQe,OAAON,QAAQC,IAAI,sBAEpCN,aAAa,EAAKC,QAClB,EAAKa,SACL,EAAKC,eAMS,EAAA,KAAA,kBAAA,SAACC,GACbA,OAAAA,EAAKN,SAAW,EAAKd,QAAQa,KAAKC,QAC/BM,EAAKC,MAAM,SAACC,EAAKC,GAAMD,OAAAA,IAAQ,EAAKtB,QAAQa,KAAKU,OAGjD,EAAA,KAAA,SAAA,WACP,EAAKrB,MAAQ,KAGG,EAAA,KAAA,kBAAA,WAChB,EAAKgB,WAGa,EAAA,KAAA,oBAAA,WAClBT,QAAQC,IAAI,uBAAwB,sBAGtB,EAAA,KAAA,gBAAA,WACdD,QAAQC,IAAI,IACZD,QAAQC,IAAI,yBACZD,QAAQC,IAAIc,KAAKC,UAAU,EAAKvB,QAChCO,QAAQC,IAAI,IACZ,EAAKQ,WA/DAhB,KAAAA,MAAQ,GACRwB,KAAAA,SAAW,CACdb,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3CE,OAAO,EACPP,MAAO,KAGJR,KAAAA,QAAe,EAAA,EAAA,GAAA,KAAK0B,UAAa1B,GACjCgB,KAAAA,QAA0C,mBAAzB,KAAKhB,QAAQgB,QAAyB,KAAKhB,QAAQgB,QAAU,KAAKW,gBACnFR,KAAAA,UAA8C,mBAA3B,KAAKnB,QAAQmB,UAA2B,KAAKnB,QAAQmB,UAAY,KAAKS,mBA0DlGC,OAAO9B,SAAWA,EAEHA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"ducknami.js","sourceRoot":"..","sourcesContent":["class Ducknami {\n  constructor(options = {}) {\n    this.cache = [];\n    this.defaults = {\n      code: [38, 38, 40, 40, 37, 39, 37, 39, 66, 65],\n      debug: false,\n      delay: 1000,\n    };\n\n    this.options = { ...this.defaults, ...options };\n    this.onReset = typeof this.options.onReset === 'function' ? this.options.onReset : this._onDefaultReset;\n    this.onSuccess = typeof this.options.onSuccess === 'function' ? this.options.onSuccess : this._onDefaultSuccess;\n  }\n\n  setup = (e) => {\n    this.cache = [...this.cache, e.keyCode];\n\n    clearTimeout(this._timer);\n    this._timer = setTimeout(this._onSetupReset, this.options.delay);\n\n    console.log('CURRENT SEQUENCE: ', this.cache.join(' '));\n  };\n\n  run = (e) => {\n    this.cache = [...this.cache, e.keyCode].slice(this.options.code.length * -1);\n    if (this.options.debug) {\n      console.log('CURRENT SEQUENCE: ', this.cache.join(' '));\n    }\n\n    clearTimeout(this._timer);\n    this._timer = setTimeout(this.onReset, this.options.delay);\n\n    if (this._checkValidCode(this.cache)) {\n      if (this.options.debug) console.log('VALID CODE ENTERED');\n\n      clearTimeout(this._timer);\n      this._clear();\n      this.onSuccess();\n    }\n  };\n\n  //\n\n  _checkValidCode = (keys) => {\n    if (keys.length !== this.options.code.length) return false;\n    return keys.every((val, i) => val === this.options.code[i]);\n  };\n\n  _clear = () => {\n    this.cache = [];\n  };\n\n  _onDefaultReset = () => {\n    this._clear();\n  };\n\n  _onDefaultSuccess = () => {\n    console.log('%cPEAK NERD UNLOCKED', 'font-size: 36px;');\n  };\n\n  _onSetupReset = () => {\n    console.log('');\n    console.log('HERE IS YOUR SEQUENCE');\n    console.log(JSON.stringify(this.cache));\n    console.log('');\n    this._clear();\n  };\n};\n\nwindow.Ducknami = Ducknami;\n\nexport default Ducknami;\n"]}